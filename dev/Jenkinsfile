
// Jenkins job
// Add this Jenkinsfile in the same folder where you have Terraform scripts

CODE_CHANGES = getGitChanges()

pipeline {
    agent any  # Where to execute  Eg: node info...etc

    environment {
        // PATH = "${PATH}/${getTerraformPath()}"
    }
              
    stages # This is where we define the steps to be executed
    {
        // stage('S3 bucket creation - dev')
        // {  
        //     steps # Executes commands on Jenkins server 
        //     {  
        //         script
        //         {
        //             sh "ansible-playbook ansible/s3-bucket.yml"
        //         }
        //     }  
        // }

        stage('build')
        {
            when {
                // If this boolean expression is true then only go further and execute steps section
                expression {
                    // Only if branch name is master or dev then only the following steps will get executed
                    env.BRANCH_NAME == 'master' && CODE_CHANGES == true
                }
            }
            steps
            {
            }
        }

        stage('terraform init and apply - dev')
        {
            when {
                // If this boolean expression is true then only go further and execute steps section
                expression {
                    // Only if branch name is master or dev then only the following steps will get executed
                    env.BRANCH_NAME == 'master' || env.BRANCH_NAME == 'dev'
                }
            }
            steps
            {
                sh returnStatus: true; script: 'terraform workspace new dev'
                sh "terraform init"
                // sh "ansible-playbook ansible/terraform.yml -e todoapp_env=dev"
            }
        }

        // stage('terraform init and apply - prod')
        // {
        //     steps
        //     {
        //         sh returnStatus: true; script: 'terraform workspace new prod'
        //         sh "terraform init"
        //         sh "ansible-playbook ansible/terraform.yml"
        //     }
        // }
    }
    post {
        // Execute something after all the stages are done
        aways {
            // Execute this code always i.e. irrespective of whether build is failed and successful
        }
        success {
            // Exceute this script if the build is successful
        }
        failure {
            // Execute this script if the build is failed
        }
    }
}

// This will return the path where terraform is installed
def setTerraformPath()
{
    def tfHome = tool name: ‘Terraform’
    env.PATH = "${tfHome}:${env.PATH}"
}
